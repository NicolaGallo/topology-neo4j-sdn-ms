stages:
  - build
  - test
  - deploy

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

cache:
  paths:
    - .m2/repository/

build:
  stage: build
  image: maven:3.9-eclipse-temurin-17
  script:
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - application/target/*.jar
    expire_in: 1 week

test:
  stage: test
  image: maven:3.9-eclipse-temurin-17
  script:
    - mvn test
  artifacts:
    reports:
      junit:
        - application/target/surefire-reports/TEST-*.xml

sonarqube:
  stage: test
  image: maven:3.9-eclipse-temurin-17
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - mvn verify sonar:sonar -Dsonar.projectKey=topology-neo4j-sdn-ms
  only:
    - main
    - merge_requests

docker-build:
  stage: deploy
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_REGISTRY: ${CI_REGISTRY}
    DOCKER_IMAGE_NAME: ${CI_REGISTRY_IMAGE}
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker build -t ${DOCKER_IMAGE_NAME}:${CI_COMMIT_SHORT_SHA} -t ${DOCKER_IMAGE_NAME}:latest -f docker/Dockerfile .
    - docker push ${DOCKER_IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}
    - docker push ${DOCKER_IMAGE_NAME}:latest
  only:
    - main
    - tags

deploy-dev:
  stage: deploy
  image: alpine:latest
  script:
    - apk add --no-cache curl
    - curl -X POST "${DEPLOY_WEBHOOK_DEV}?token=${DEPLOY_TOKEN}&image=${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
  only:
    - main
  environment:
    name: development

deploy-prod:
  stage: deploy
  image: alpine:latest
  script:
    - apk add --no-cache curl
    - curl -X POST "${DEPLOY_WEBHOOK_PROD}?token=${DEPLOY_TOKEN}&image=${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
  only:
    - tags
  environment:
    name: production
  when: manual